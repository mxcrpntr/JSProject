/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_example__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/example */ \"./src/scripts/example.js\");\n/* harmony import */ var _scripts_word_ladder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/word_ladder */ \"./src/scripts/word_ladder.js\");\n\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  const response = await fetch('./src/dictionary.txt');\n  const data = await response.text();\n  // const dictionary = new Set(data.split(\"\\n\"));\n  const dictionary = data.split(\"\\n\");\n  const dictionaryObj = {};\n  for (let i = 0; i < dictionary.length; i++) {\n    let sorted = dictionary[i].split(\"\").sort();\n    let anaArray = dictionaryObj[sorted];\n    if (anaArray != undefined) {\n      // debugger\n      anaArray.push(dictionary[i]);\n      dictionaryObj[sorted] = anaArray;\n    } else {\n      dictionaryObj[sorted] = [dictionary[i]];\n    }\n  }\n  window.dictionary = dictionary;\n  window.dictionaryObj = dictionaryObj;\n  window.WordLadder = _scripts_word_ladder__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXVDO0FBQ087QUFFOUNFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsWUFBWTtFQUN0RCxNQUFNQyxRQUFRLEdBQUcsTUFBTUMsS0FBSyxDQUFDLHNCQUFzQixDQUFDO0VBQ3BELE1BQU1DLElBQUksR0FBRyxNQUFNRixRQUFRLENBQUNHLElBQUksQ0FBQyxDQUFDO0VBQ2xDO0VBQ0EsTUFBTUMsVUFBVSxHQUFHRixJQUFJLENBQUNHLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDbkMsTUFBTUMsYUFBYSxHQUFHLENBQUMsQ0FBQztFQUN4QixLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0gsVUFBVSxDQUFDSSxNQUFNLEVBQUVELENBQUMsRUFBRSxFQUFFO0lBQ3hDLElBQUlFLE1BQU0sR0FBR0wsVUFBVSxDQUFDRyxDQUFDLENBQUMsQ0FBQ0YsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDSyxJQUFJLENBQUMsQ0FBQztJQUMzQyxJQUFJQyxRQUFRLEdBQUdMLGFBQWEsQ0FBQ0csTUFBTSxDQUFDO0lBQ3BDLElBQUlFLFFBQVEsSUFBSUMsU0FBUyxFQUFFO01BQ3ZCO01BQ0FELFFBQVEsQ0FBQ0UsSUFBSSxDQUFDVCxVQUFVLENBQUNHLENBQUMsQ0FBQyxDQUFDO01BQzVCRCxhQUFhLENBQUNHLE1BQU0sQ0FBQyxHQUFHRSxRQUFRO0lBQ3BDLENBQUMsTUFBTTtNQUNITCxhQUFhLENBQUNHLE1BQU0sQ0FBQyxHQUFHLENBQUNMLFVBQVUsQ0FBQ0csQ0FBQyxDQUFDLENBQUM7SUFDM0M7RUFDSjtFQUNBTyxNQUFNLENBQUNWLFVBQVUsR0FBR0EsVUFBVTtFQUM5QlUsTUFBTSxDQUFDUixhQUFhLEdBQUdBLGFBQWE7RUFDcENRLE1BQU0sQ0FBQ2pCLFVBQVUsR0FBR0EsNERBQVU7QUFFbEMsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNwcm9qZWN0Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV4YW1wbGUgZnJvbSBcIi4vc2NyaXB0cy9leGFtcGxlXCJcbmltcG9ydCBXb3JkTGFkZGVyIGZyb20gXCIuL3NjcmlwdHMvd29yZF9sYWRkZXJcIlxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnLi9zcmMvZGljdGlvbmFyeS50eHQnKTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICAgIC8vIGNvbnN0IGRpY3Rpb25hcnkgPSBuZXcgU2V0KGRhdGEuc3BsaXQoXCJcXG5cIikpO1xuICAgIGNvbnN0IGRpY3Rpb25hcnkgPSBkYXRhLnNwbGl0KFwiXFxuXCIpO1xuICAgIGNvbnN0IGRpY3Rpb25hcnlPYmogPSB7fTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRpY3Rpb25hcnkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbGV0IHNvcnRlZCA9IGRpY3Rpb25hcnlbaV0uc3BsaXQoXCJcIikuc29ydCgpO1xuICAgICAgICBsZXQgYW5hQXJyYXkgPSBkaWN0aW9uYXJ5T2JqW3NvcnRlZF07XG4gICAgICAgIGlmIChhbmFBcnJheSAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIC8vIGRlYnVnZ2VyXG4gICAgICAgICAgICBhbmFBcnJheS5wdXNoKGRpY3Rpb25hcnlbaV0pO1xuICAgICAgICAgICAgZGljdGlvbmFyeU9ialtzb3J0ZWRdID0gYW5hQXJyYXk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkaWN0aW9uYXJ5T2JqW3NvcnRlZF0gPSBbZGljdGlvbmFyeVtpXV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgd2luZG93LmRpY3Rpb25hcnkgPSBkaWN0aW9uYXJ5O1xuICAgIHdpbmRvdy5kaWN0aW9uYXJ5T2JqID0gZGljdGlvbmFyeU9iajtcbiAgICB3aW5kb3cuV29yZExhZGRlciA9IFdvcmRMYWRkZXI7XG4gICAgXG59KVxuIl0sIm5hbWVzIjpbIkV4YW1wbGUiLCJXb3JkTGFkZGVyIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwicmVzcG9uc2UiLCJmZXRjaCIsImRhdGEiLCJ0ZXh0IiwiZGljdGlvbmFyeSIsInNwbGl0IiwiZGljdGlvbmFyeU9iaiIsImkiLCJsZW5ndGgiLCJzb3J0ZWQiLCJzb3J0IiwiYW5hQXJyYXkiLCJ1bmRlZmluZWQiLCJwdXNoIiwid2luZG93Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/example.js":
/*!********************************!*\
  !*** ./src/scripts/example.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Example {\n  constructor(ele) {\n    this.ele = ele;\n    this.ele.innerHTML = \"<h1>It's ALIVE!!!</h1>\";\n    this.handleClick = this.handleClick.bind(this);\n    this.ele.addEventListener(\"click\", this.handleClick);\n  }\n  handleClick() {\n    this.ele.children[0].innerText = \"Ouch!\";\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Example);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9leGFtcGxlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxPQUFPLENBQUM7RUFDVkMsV0FBV0EsQ0FBQ0MsR0FBRyxFQUFFO0lBQ2IsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNBLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLHdCQUF3QjtJQUM3QyxJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJLENBQUNBLFdBQVcsQ0FBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQztJQUM5QyxJQUFJLENBQUNILEdBQUcsQ0FBQ0ksZ0JBQWdCLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQ0YsV0FBVyxDQUFDO0VBRXhEO0VBRUFBLFdBQVdBLENBQUEsRUFBRztJQUNWLElBQUksQ0FBQ0YsR0FBRyxDQUFDSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUNDLFNBQVMsR0FBRyxPQUFPO0VBQzVDO0FBQ0o7QUFFQSwrREFBZVIsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzcHJvamVjdC8uL3NyYy9zY3JpcHRzL2V4YW1wbGUuanM/ZmNlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBFeGFtcGxlIHtcbiAgICBjb25zdHJ1Y3RvcihlbGUpIHtcbiAgICAgICAgdGhpcy5lbGUgPSBlbGU7XG4gICAgICAgIHRoaXMuZWxlLmlubmVySFRNTCA9IFwiPGgxPkl0J3MgQUxJVkUhISE8L2gxPlwiO1xuICAgICAgICB0aGlzLmhhbmRsZUNsaWNrID0gdGhpcy5oYW5kbGVDbGljay5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmVsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5oYW5kbGVDbGljayk7XG5cbiAgICB9XG5cbiAgICBoYW5kbGVDbGljaygpIHtcbiAgICAgICAgdGhpcy5lbGUuY2hpbGRyZW5bMF0uaW5uZXJUZXh0ID0gXCJPdWNoIVwiO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRXhhbXBsZTsiXSwibmFtZXMiOlsiRXhhbXBsZSIsImNvbnN0cnVjdG9yIiwiZWxlIiwiaW5uZXJIVE1MIiwiaGFuZGxlQ2xpY2siLCJiaW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNoaWxkcmVuIiwiaW5uZXJUZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/example.js\n");

/***/ }),

/***/ "./src/scripts/word_ladder.js":
/*!************************************!*\
  !*** ./src/scripts/word_ladder.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ WordLadder; }\n/* harmony export */ });\n/* harmony import */ var _word_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./word_node.js */ \"./src/scripts/word_node.js\");\n\nclass WordLadder {\n  constructor(startWord, endWord, dictionaryArr, dictionaryObj) {\n    this.startWord = startWord;\n    this.endWord = endWord;\n    this.dictionary = new Set(dictionaryArr);\n    if (!this.dictionary.has(startWord)) throw Error`${startWord} is not in our dictionary!`;\n    if (!this.dictionary.has(endWord)) throw Error`${endWord} is not in our dictionary!`;\n    this.dictionaryObj = dictionaryObj;\n  }\n  shortestLadder() {\n    let anagrams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let addRemove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    if (this.startWord.length != this.endWord.length && !addRemove) {\n      return undefined;\n    }\n    const startNode = new _word_node_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.startWord, null, this.dictionary, this.dictionaryObj);\n    startNode.addChildren.bind(startNode)(anagrams, addRemove);\n    const alreadySeenWords = [];\n    const visitQueue = [].concat(startNode.children);\n    let currentNode = startNode;\n    while (visitQueue.length > 0) {\n      currentNode = visitQueue.shift();\n      if (currentNode.word === this.endword) {\n        if (n > 0) {\n          currentNode = visitQueue.shift();\n          n--;\n        }\n      }\n      if (currentNode.word === this.endWord) {\n        while (currentNode.word === this.endWord && n > 0) {\n          currentNode = visitQueue.shift();\n          n--;\n        }\n        if (currentNode.word === this.endWord) {\n          break;\n        }\n      }\n      currentNode.addChildren.bind(currentNode)(anagrams, addRemove);\n\n      // console.log(startNode.children.map(node => node.word));\n\n      alreadySeenWords.push(currentNode.word);\n      let visitWords = visitQueue.map(node => node.word);\n      currentNode.children.forEach(childNode => {\n        if (childNode.word === this.endWord && n > 0) {\n          visitQueue.push(childNode);\n          visitWords.push(childNode.word);\n        } else if (!alreadySeenWords.includes(childNode.word) && !visitWords.includes(childNode.word) && !childNode.isOwnAncestor()) {\n          visitQueue.push(childNode);\n          visitWords.push(childNode.word);\n        }\n        // else if (n > 0 && !childNode.isOwnAncestor() && !visitWords.includes(childNode.word)) {\n        //     visitQueue.push(childNode);\n        //     visitWords.push(childNode.word);\n        // }\n      });\n    }\n\n    if (currentNode.word === this.endWord) {\n      let parent = currentNode.parent;\n      let node = currentNode;\n      let ladder = [currentNode.word];\n      while (parent != null) {\n        node = parent;\n        parent = node.parent;\n        ladder.unshift(node.word);\n      }\n      // return ladder;\n      return startNode;\n    }\n    return undefined;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/word_ladder.js\n");

/***/ }),

/***/ "./src/scripts/word_node.js":
/*!**********************************!*\
  !*** ./src/scripts/word_node.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ WordNode; }\n/* harmony export */ });\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'.split(\"\");\nclass WordNode {\n  constructor(word, parent, dictionary, dictionaryObj) {\n    this.word = word;\n    this.parent = parent;\n    this.dictionary = dictionary;\n    this.children = [];\n    this.nextRungWords = this.nextRungWords.bind(this);\n    // this.addRungChildren.bind(this)();\n    // this.anagrams = anagrams.bind(this)(this.word);\n    // this.addLetterWords = this.addLetterWords.bind(this);\n    // this.removeLetterWords = this.removeLetterWords.bind(this);\n    this.dictionaryObj = dictionaryObj;\n  }\n  addChild(newWord) {\n    const child = new WordNode(newWord, this, this.dictionary, this.dictionaryObj);\n    if (!child.isOwnAncestor()) this.children.push(child);\n  }\n  // removeChild(child) {\n  //     const childIdx = this.children.indexOf(child);\n  //     if (childIdx >= 0 && childIdx < this.children.length) {\n  //         this.children.splice(childIdx,1);\n  //     }\n  // }\n  nextRungWords() {\n    const nextRungWords = [];\n    for (let i = 0; i < this.word.length; i++) {\n      let beforeStr = this.word.slice(0, i);\n      let afterStr = this.word.slice(i + 1);\n      for (let j = 0; j < ALPHA.length; j++) {\n        if (this.word.slice(i, i + 1) != ALPHA[j]) {\n          let newStr = beforeStr.split(\"\").concat([ALPHA[j]]).concat(afterStr.split(\"\")).join(\"\");\n          if (this.dictionary.has(newStr) && newStr != this.word) nextRungWords.push(newStr);\n        }\n      }\n    }\n    return nextRungWords;\n  }\n  addChildren() {\n    let anagrams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let addRemove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (addRemove) this.addAddRemoveChildren();\n    if (anagrams) this.addAnagramChildren();\n    this.addRungChildren();\n  }\n  addRungChildren() {\n    let rungChildren = this.nextRungWords();\n    for (let i = 0; i < rungChildren.length; i++) {\n      this.addChild(rungChildren[i]);\n    }\n  }\n  addAnagramChildren() {\n    let sorted = this.word.split(\"\").sort();\n    let anagrams = this.dictionaryObj[sorted];\n    if (anagrams != undefined) {\n      for (let i = 0; i < anagrams.length; i++) {\n        if (!(this.word === anagrams[i])) this.addChild(anagrams[i]);\n      }\n    }\n  }\n  addLetterWords() {\n    const addLetterWords = [];\n    for (let i = 0; i <= this.word.length; i++) {\n      let beforeStr = this.word.slice(0, i);\n      let afterStr = this.word.slice(i);\n      for (let j = 0; j < ALPHA.length; j++) {\n        let newStr = beforeStr.split(\"\").concat([ALPHA[j]]).concat(afterStr.split(\"\")).join(\"\");\n        if (this.dictionary.has(newStr)) {\n          addLetterWords.push(newStr);\n        }\n      }\n    }\n    return addLetterWords;\n  }\n  removeLetterWords() {\n    const removeLetterWords = [];\n    for (let i = 0; i < this.word.length; i++) {\n      let beforeStr = this.word.slice(0, i);\n      let afterStr = this.word.slice(i + 1);\n      let newStr = beforeStr.split(\"\").concat(afterStr.split(\"\")).join(\"\");\n      if (this.dictionary.has(newStr)) removeLetterWords.push(newStr);\n    }\n    return removeLetterWords;\n  }\n  addAddRemoveChildren() {\n    this.addLetterWords().forEach(addWord => {\n      this.addChild(addWord);\n    });\n    this.removeLetterWords().forEach(removeWord => {\n      this.addChild(removeWord);\n    });\n  }\n  isOwnAncestor() {\n    let parentNode = this.parent;\n    while (parentNode != null) {\n      if (parentNode.word === this.word) return true;\n      parentNode = parentNode.parent;\n    }\n    return false;\n  }\n}\nfunction anagrams(word) {\n  // console.log(`lookin up anagrams for ${word}`)\n  const anagrams = [];\n  // perms(word).forEach(str => {\n  //     if (this.dictionary.has(str) && str != word) {\n  //         anagrams.push(str);\n  //     }\n  // })\n  console.log('start');\n  this.dictionary.forEach(word2 => {\n    if (isAnagram(word, word2)) anagrams.push(word2);\n  });\n  console.log('end');\n  return anagrams;\n}\nfunction perms(word) {\n  if (word.length == 0) return [];\n  if (word.length == 1) return [word];\n  let permsArr = [];\n  for (let i = 0; i < word.length; i++) {\n    let newArr = word.split(\"\");\n    newArr.splice(i, 1);\n    let shorterPerms = perms(newArr.join(\"\"));\n    let iLetterArr = word.split(\"\").slice(i, i + 1);\n    let iPerms = shorterPerms.map(perm => iLetterArr.concat(perm.split(\"\")).join(\"\"));\n    permsArr = permsArr.concat(iPerms);\n  }\n  return permsArr;\n}\nfunction isAnagram(word1, word2) {\n  if (word1.length != word2.length) return false;\n  const obj = {};\n  for (let i = 0; i < word1.length; i++) {\n    let letter = word1.slice(i, i + 1);\n    if (obj[letter] != undefined) {\n      obj[letter] += 1;\n    } else {\n      obj[letter] = 1;\n    }\n  }\n  for (let i = 0; i < word2.length; i++) {\n    let letter = word2.slice(i, i + 1);\n    if (obj[letter] === undefined) {\n      break;\n    } else {\n      obj[letter] -= 1;\n    }\n  }\n  return Object.values(obj).every(el => el === 0);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/word_node.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;