/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_example__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/example */ \"./src/scripts/example.js\");\n/* harmony import */ var _scripts_word_ladder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/word_ladder */ \"./src/scripts/word_ladder.js\");\n\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  const response = await fetch('./src/dictionary.txt');\n  const data = await response.text();\n  const dictionary = new Set(data.split(\"\\n\"));\n  window.dictionary = dictionary;\n  window.WordLadder = _scripts_word_ladder__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQXVDO0FBQ087QUFFOUNFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsWUFBWTtFQUN0RCxNQUFNQyxRQUFRLEdBQUcsTUFBTUMsS0FBSyxDQUFDLHNCQUFzQixDQUFDO0VBQ3BELE1BQU1DLElBQUksR0FBRyxNQUFNRixRQUFRLENBQUNHLElBQUksQ0FBQyxDQUFDO0VBQ2xDLE1BQU1DLFVBQVUsR0FBRyxJQUFJQyxHQUFHLENBQUNILElBQUksQ0FBQ0ksS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0VBQzVDQyxNQUFNLENBQUNILFVBQVUsR0FBR0EsVUFBVTtFQUM5QkcsTUFBTSxDQUFDVixVQUFVLEdBQUdBLDREQUFVO0FBRWxDLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzcHJvamVjdC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeGFtcGxlIGZyb20gXCIuL3NjcmlwdHMvZXhhbXBsZVwiXG5pbXBvcnQgV29yZExhZGRlciBmcm9tIFwiLi9zY3JpcHRzL3dvcmRfbGFkZGVyXCJcblxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy4vc3JjL2RpY3Rpb25hcnkudHh0Jyk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICBjb25zdCBkaWN0aW9uYXJ5ID0gbmV3IFNldChkYXRhLnNwbGl0KFwiXFxuXCIpKTtcbiAgICB3aW5kb3cuZGljdGlvbmFyeSA9IGRpY3Rpb25hcnk7XG4gICAgd2luZG93LldvcmRMYWRkZXIgPSBXb3JkTGFkZGVyO1xuICAgIFxufSlcbiJdLCJuYW1lcyI6WyJFeGFtcGxlIiwiV29yZExhZGRlciIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlc3BvbnNlIiwiZmV0Y2giLCJkYXRhIiwidGV4dCIsImRpY3Rpb25hcnkiLCJTZXQiLCJzcGxpdCIsIndpbmRvdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/example.js":
/*!********************************!*\
  !*** ./src/scripts/example.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass Example {\n  constructor(ele) {\n    this.ele = ele;\n    this.ele.innerHTML = \"<h1>It's ALIVE!!!</h1>\";\n    this.handleClick = this.handleClick.bind(this);\n    this.ele.addEventListener(\"click\", this.handleClick);\n  }\n  handleClick() {\n    this.ele.children[0].innerText = \"Ouch!\";\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Example);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9leGFtcGxlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxPQUFPLENBQUM7RUFDVkMsV0FBV0EsQ0FBQ0MsR0FBRyxFQUFFO0lBQ2IsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUc7SUFDZCxJQUFJLENBQUNBLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLHdCQUF3QjtJQUM3QyxJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJLENBQUNBLFdBQVcsQ0FBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQztJQUM5QyxJQUFJLENBQUNILEdBQUcsQ0FBQ0ksZ0JBQWdCLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQ0YsV0FBVyxDQUFDO0VBRXhEO0VBRUFBLFdBQVdBLENBQUEsRUFBRztJQUNWLElBQUksQ0FBQ0YsR0FBRyxDQUFDSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUNDLFNBQVMsR0FBRyxPQUFPO0VBQzVDO0FBQ0o7QUFFQSwrREFBZVIsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzcHJvamVjdC8uL3NyYy9zY3JpcHRzL2V4YW1wbGUuanM/ZmNlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBFeGFtcGxlIHtcbiAgICBjb25zdHJ1Y3RvcihlbGUpIHtcbiAgICAgICAgdGhpcy5lbGUgPSBlbGU7XG4gICAgICAgIHRoaXMuZWxlLmlubmVySFRNTCA9IFwiPGgxPkl0J3MgQUxJVkUhISE8L2gxPlwiO1xuICAgICAgICB0aGlzLmhhbmRsZUNsaWNrID0gdGhpcy5oYW5kbGVDbGljay5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmVsZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5oYW5kbGVDbGljayk7XG5cbiAgICB9XG5cbiAgICBoYW5kbGVDbGljaygpIHtcbiAgICAgICAgdGhpcy5lbGUuY2hpbGRyZW5bMF0uaW5uZXJUZXh0ID0gXCJPdWNoIVwiO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRXhhbXBsZTsiXSwibmFtZXMiOlsiRXhhbXBsZSIsImNvbnN0cnVjdG9yIiwiZWxlIiwiaW5uZXJIVE1MIiwiaGFuZGxlQ2xpY2siLCJiaW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNoaWxkcmVuIiwiaW5uZXJUZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/example.js\n");

/***/ }),

/***/ "./src/scripts/word_ladder.js":
/*!************************************!*\
  !*** ./src/scripts/word_ladder.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ WordLadder; }\n/* harmony export */ });\n/* harmony import */ var _word_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./word_node.js */ \"./src/scripts/word_node.js\");\n\nclass WordLadder {\n  constructor(startWord, endWord, dictionary) {\n    if (!dictionary.has(startWord)) throw Error`${startWord} is not in our dictionary!`;\n    if (!dictionary.has(endWord)) throw Error`${endWord} is not in our dictionary!`;\n    this.startWord = startWord;\n    this.endWord = endWord;\n    this.dictionary = dictionary;\n  }\n  shortestLadder() {\n    let anagrams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let addRemove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    if (this.startWord.length != this.endWord.length && !addRemove) {\n      return undefined;\n    }\n    const startNode = new _word_node_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.startWord, null, this.dictionary);\n    if (addRemove === true) {\n      startNode.addAddRemoveChildren();\n    }\n    if (anagrams === true) {\n      startNode.addAnagramChildren();\n    }\n    startNode.addRungChildren();\n    const alreadySeenWords = [];\n    const visitQueue = startNode.children;\n    let visitWordsTest = visitQueue.map(node => node.word);\n    let currentNode = startNode;\n    while (visitQueue.length > 0) {\n      currentNode = visitQueue.shift();\n      if (currentNode.word === this.endword) {\n        if (n > 0) {\n          currentNode = visitQueue.shift();\n          n--;\n        }\n      }\n      if (currentNode.word === this.endWord) {\n        while (currentNode.word === this.endWord && n > 0) {\n          // debugger\n          currentNode = visitQueue.shift();\n          n--;\n        }\n        if (currentNode.word === this.endWord) {\n          // debugger\n          break;\n        }\n      }\n      if (addRemove === true) {\n        currentNode.addAddRemoveChildren();\n      }\n      if (anagrams === true) {\n        currentNode.addAnagramChildren();\n      }\n      currentNode.addRungChildren();\n      alreadySeenWords.push(currentNode.word);\n      let visitWords = visitQueue.map(node => node.word);\n      currentNode.children.forEach(childNode => {\n        if (childNode.word === this.endWord && n > 0) {\n          visitQueue.push(childNode);\n          visitWords.push(childNode.word);\n        } else if (!alreadySeenWords.includes(childNode.word) && !visitWords.includes(childNode.word)) {\n          visitQueue.push(childNode);\n          visitWords.push(childNode.word);\n        }\n      });\n    }\n    if (currentNode.word === this.endWord) {\n      let parent = currentNode.parent;\n      let node = currentNode;\n      let ladder = [currentNode.word];\n      while (parent != null) {\n        node = parent;\n        parent = node.parent;\n        ladder.unshift(node.word);\n      }\n      return ladder;\n    }\n    return undefined;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/word_ladder.js\n");

/***/ }),

/***/ "./src/scripts/word_node.js":
/*!**********************************!*\
  !*** ./src/scripts/word_node.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ WordNode; }\n/* harmony export */ });\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'.split(\"\");\nclass WordNode {\n  constructor(word, parent, dictionary) {\n    this.word = word;\n    this.parent = parent;\n    this.dictionary = dictionary;\n    this.children = [];\n    this.nextRungWords = this.nextRungWords.bind(this);\n    // this.addRungChildren.bind(this)();\n    this.anagrams = anagrams.bind(this)(this.word);\n    // this.addLetterWords = this.addLetterWords.bind(this);\n    // this.removeLetterWords = this.removeLetterWords.bind(this);\n  }\n\n  addChild(newWord) {\n    const child = new WordNode(newWord, this, this.dictionary);\n    this.children.push(child);\n  }\n  removeChild(child) {\n    const childIdx = this.children.indexOf(child);\n    if (childIdx >= 0 && childIdx < this.children.length) {\n      this.children.splice(childIdx, 1);\n    }\n  }\n  nextRungWords() {\n    const nextRungWords = [];\n    for (let i = 0; i < this.word.length; i++) {\n      let beforeStr = this.word.slice(0, i);\n      let afterStr = this.word.slice(i + 1);\n      for (let j = 0; j < ALPHA.length; j++) {\n        let newStr = beforeStr.split(\"\").concat([ALPHA[j]]).concat(afterStr.split(\"\")).join(\"\");\n        if (this.dictionary.has(newStr) && newStr != this.word) nextRungWords.push(newStr);\n      }\n    }\n    return nextRungWords;\n  }\n  addRungChildren() {\n    let rungChildren = this.nextRungWords();\n    for (let i = 0; i < rungChildren.length; i++) {\n      this.addChild(rungChildren[i]);\n    }\n  }\n  addAnagramChildren() {\n    this.anagrams.forEach(anagram => {\n      this.addChild(anagram);\n    });\n  }\n  addLetterWords() {\n    const addLetterWords = [];\n    for (let i = 0; i <= this.word.length; i++) {\n      let beforeStr = this.word.slice(0, i);\n      let afterStr = this.word.slice(i);\n      for (let j = 0; j < ALPHA.length; j++) {\n        let newStr = beforeStr.split(\"\").concat([ALPHA[j]]).concat(afterStr.split(\"\")).join(\"\");\n        if (this.dictionary.has(newStr)) {\n          addLetterWords.push(newStr);\n        }\n      }\n    }\n    return addLetterWords;\n  }\n  removeLetterWords() {\n    const removeLetterWords = [];\n    for (let i = 0; i < this.word.length; i++) {\n      let beforeStr = this.word.slice(0, i);\n      let afterStr = this.word.slice(i + 1);\n      let newStr = beforeStr.split(\"\").concat(afterStr.split(\"\")).join(\"\");\n      if (this.dictionary.has(newStr)) removeLetterWords.push(newStr);\n    }\n    return removeLetterWords;\n  }\n  addAddRemoveChildren() {\n    this.addLetterWords().forEach(addWord => {\n      this.addChild(addWord);\n    });\n    this.removeLetterWords().forEach(removeWord => {\n      this.addChild(removeWord);\n    });\n  }\n}\nfunction anagrams(word) {\n  // console.log(`lookin up anagrams for ${word}`)\n  const anagrams = [];\n  // perms(word).forEach(str => {\n  //     if (this.dictionary.has(str) && str != word) {\n  //         anagrams.push(str);\n  //     }\n  // })\n  console.log('start');\n  this.dictionary.forEach(word2 => {\n    if (isAnagram(word, word2)) anagrams.push(word2);\n  });\n  console.log('end');\n  return anagrams;\n}\nfunction perms(word) {\n  if (word.length == 0) return [];\n  if (word.length == 1) return [word];\n  let permsArr = [];\n  for (let i = 0; i < word.length; i++) {\n    let newArr = word.split(\"\");\n    newArr.splice(i, 1);\n    let shorterPerms = perms(newArr.join(\"\"));\n    let iLetterArr = word.split(\"\").slice(i, i + 1);\n    let iPerms = shorterPerms.map(perm => iLetterArr.concat(perm.split(\"\")).join(\"\"));\n    permsArr = permsArr.concat(iPerms);\n  }\n  return permsArr;\n}\nfunction isAnagram(word1, word2) {\n  if (word1.length != word2.length) return false;\n  const obj = {};\n  for (let i = 0; i < word1.length; i++) {\n    let letter = word1.slice(i, i + 1);\n    if (obj[letter] != undefined) {\n      obj[letter] += 1;\n    } else {\n      obj[letter] = 1;\n    }\n  }\n  for (let i = 0; i < word2.length; i++) {\n    let letter = word2.slice(i, i + 1);\n    if (obj[letter] === undefined) {\n      break;\n    } else {\n      obj[letter] -= 1;\n    }\n  }\n  return Object.values(obj).every(el => el === 0);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFBSSxDQUFDO0lBQ3BCO0VBQ0o7RUFDQSxPQUFPRSxNQUFNLENBQUNDLE1BQU0sQ0FBQ0osR0FBRyxDQUFDLENBQUNLLEtBQUssQ0FBQ0MsRUFBRSxJQUFJQSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ25EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanNwcm9qZWN0Ly4vc3JjL3NjcmlwdHMvd29yZF9ub2RlLmpzPzJjMzIiXSwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBBTFBIQSA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eicuc3BsaXQoXCJcIik7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdvcmROb2RlIHtcbiAgICBjb25zdHJ1Y3Rvcih3b3JkLHBhcmVudCxkaWN0aW9uYXJ5KSB7XG4gICAgICAgIHRoaXMud29yZCA9IHdvcmQ7XG4gICAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50O1xuICAgICAgICB0aGlzLmRpY3Rpb25hcnkgPSBkaWN0aW9uYXJ5O1xuICAgICAgICB0aGlzLmNoaWxkcmVuID0gW107XG4gICAgICAgIHRoaXMubmV4dFJ1bmdXb3JkcyA9IHRoaXMubmV4dFJ1bmdXb3Jkcy5iaW5kKHRoaXMpO1xuICAgICAgICAvLyB0aGlzLmFkZFJ1bmdDaGlsZHJlbi5iaW5kKHRoaXMpKCk7XG4gICAgICAgIHRoaXMuYW5hZ3JhbXMgPSBhbmFncmFtcy5iaW5kKHRoaXMpKHRoaXMud29yZCk7XG4gICAgICAgIC8vIHRoaXMuYWRkTGV0dGVyV29yZHMgPSB0aGlzLmFkZExldHRlcldvcmRzLmJpbmQodGhpcyk7XG4gICAgICAgIC8vIHRoaXMucmVtb3ZlTGV0dGVyV29yZHMgPSB0aGlzLnJlbW92ZUxldHRlcldvcmRzLmJpbmQodGhpcyk7XG4gICAgfVxuICAgIGFkZENoaWxkKG5ld1dvcmQpIHtcbiAgICAgICAgY29uc3QgY2hpbGQgPSBuZXcgV29yZE5vZGUobmV3V29yZCx0aGlzLHRoaXMuZGljdGlvbmFyeSk7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChjaGlsZCk7XG4gICAgfVxuICAgIHJlbW92ZUNoaWxkKGNoaWxkKSB7XG4gICAgICAgIGNvbnN0IGNoaWxkSWR4ID0gdGhpcy5jaGlsZHJlbi5pbmRleE9mKGNoaWxkKTtcbiAgICAgICAgaWYgKGNoaWxkSWR4ID49IDAgJiYgY2hpbGRJZHggPCB0aGlzLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5zcGxpY2UoY2hpbGRJZHgsMSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmV4dFJ1bmdXb3JkcygpIHtcbiAgICAgICAgY29uc3QgbmV4dFJ1bmdXb3JkcyA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMud29yZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbGV0IGJlZm9yZVN0ciA9IHRoaXMud29yZC5zbGljZSgwLGkpO1xuICAgICAgICAgICAgbGV0IGFmdGVyU3RyID0gdGhpcy53b3JkLnNsaWNlKGkrMSk7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IEFMUEhBLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgbGV0IG5ld1N0ciA9IGJlZm9yZVN0ci5zcGxpdChcIlwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb25jYXQoW0FMUEhBW2pdXSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY29uY2F0KGFmdGVyU3RyLnNwbGl0KFwiXCIpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5qb2luKFwiXCIpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmRpY3Rpb25hcnkuaGFzKG5ld1N0cikgJiYgbmV3U3RyICE9IHRoaXMud29yZCkgbmV4dFJ1bmdXb3Jkcy5wdXNoKG5ld1N0cik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5leHRSdW5nV29yZHM7XG4gICAgfVxuICAgIGFkZFJ1bmdDaGlsZHJlbigpIHtcbiAgICAgICAgbGV0IHJ1bmdDaGlsZHJlbiA9IHRoaXMubmV4dFJ1bmdXb3JkcygpO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJ1bmdDaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5hZGRDaGlsZChydW5nQ2hpbGRyZW5baV0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFkZEFuYWdyYW1DaGlsZHJlbigpIHtcbiAgICAgICAgdGhpcy5hbmFncmFtcy5mb3JFYWNoKGFuYWdyYW0gPT4ge1xuICAgICAgICAgICAgdGhpcy5hZGRDaGlsZChhbmFncmFtKTtcbiAgICAgICAgfSlcbiAgICB9XG4gICAgYWRkTGV0dGVyV29yZHMoKSB7XG4gICAgICAgIGNvbnN0IGFkZExldHRlcldvcmRzID0gW107XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IHRoaXMud29yZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbGV0IGJlZm9yZVN0ciA9IHRoaXMud29yZC5zbGljZSgwLGkpO1xuICAgICAgICAgICAgbGV0IGFmdGVyU3RyID0gdGhpcy53b3JkLnNsaWNlKGkpO1xuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBBTFBIQS5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgIGxldCBuZXdTdHIgPSBiZWZvcmVTdHIuc3BsaXQoXCJcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY29uY2F0KFtBTFBIQVtqXV0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNvbmNhdChhZnRlclN0ci5zcGxpdChcIlwiKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuam9pbihcIlwiKTtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kaWN0aW9uYXJ5LmhhcyhuZXdTdHIpKSB7XG4gICAgICAgICAgICAgICAgICAgIGFkZExldHRlcldvcmRzLnB1c2gobmV3U3RyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFkZExldHRlcldvcmRzO1xuICAgIH1cbiAgICByZW1vdmVMZXR0ZXJXb3JkcygpIHtcbiAgICAgICAgY29uc3QgcmVtb3ZlTGV0dGVyV29yZHMgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLndvcmQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGxldCBiZWZvcmVTdHIgPSB0aGlzLndvcmQuc2xpY2UoMCxpKTtcbiAgICAgICAgICAgIGxldCBhZnRlclN0ciA9IHRoaXMud29yZC5zbGljZShpKzEpO1xuICAgICAgICAgICAgbGV0IG5ld1N0ciA9IGJlZm9yZVN0ci5zcGxpdChcIlwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmNvbmNhdChhZnRlclN0ci5zcGxpdChcIlwiKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5qb2luKFwiXCIpO1xuICAgICAgICAgICAgaWYgKHRoaXMuZGljdGlvbmFyeS5oYXMobmV3U3RyKSkgcmVtb3ZlTGV0dGVyV29yZHMucHVzaChuZXdTdHIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZW1vdmVMZXR0ZXJXb3JkcztcbiAgICB9XG4gICAgYWRkQWRkUmVtb3ZlQ2hpbGRyZW4oKSB7XG4gICAgICAgIHRoaXMuYWRkTGV0dGVyV29yZHMoKS5mb3JFYWNoKGFkZFdvcmQgPT4ge1xuICAgICAgICAgICAgdGhpcy5hZGRDaGlsZChhZGRXb3JkKTtcbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy5yZW1vdmVMZXR0ZXJXb3JkcygpLmZvckVhY2gocmVtb3ZlV29yZCA9PiB7XG4gICAgICAgICAgICB0aGlzLmFkZENoaWxkKHJlbW92ZVdvcmQpO1xuICAgICAgICB9KVxuICAgIH1cbn1cblxuZnVuY3Rpb24gYW5hZ3JhbXMod29yZCkge1xuICAgIC8vIGNvbnNvbGUubG9nKGBsb29raW4gdXAgYW5hZ3JhbXMgZm9yICR7d29yZH1gKVxuICAgIGNvbnN0IGFuYWdyYW1zID0gW107XG4gICAgLy8gcGVybXMod29yZCkuZm9yRWFjaChzdHIgPT4ge1xuICAgIC8vICAgICBpZiAodGhpcy5kaWN0aW9uYXJ5LmhhcyhzdHIpICYmIHN0ciAhPSB3b3JkKSB7XG4gICAgLy8gICAgICAgICBhbmFncmFtcy5wdXNoKHN0cik7XG4gICAgLy8gICAgIH1cbiAgICAvLyB9KVxuICAgIGNvbnNvbGUubG9nKCdzdGFydCcpXG4gICAgdGhpcy5kaWN0aW9uYXJ5LmZvckVhY2god29yZDIgPT4ge1xuICAgICAgICBpZihpc0FuYWdyYW0od29yZCx3b3JkMikpIGFuYWdyYW1zLnB1c2god29yZDIpO1xuICAgIH0pXG4gICAgY29uc29sZS5sb2coJ2VuZCcpXG4gICAgcmV0dXJuIGFuYWdyYW1zO1xufVxuXG5mdW5jdGlvbiBwZXJtcyh3b3JkKSB7XG4gICAgaWYgKHdvcmQubGVuZ3RoID09IDApIHJldHVybiBbXTtcbiAgICBpZiAod29yZC5sZW5ndGggPT0gMSkgcmV0dXJuIFt3b3JkXTtcbiAgICBsZXQgcGVybXNBcnIgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHdvcmQubGVuZ3RoOyBpKyspIHtcblxuICAgICAgICBsZXQgbmV3QXJyID0gd29yZC5zcGxpdChcIlwiKTtcbiAgICAgICAgbmV3QXJyLnNwbGljZShpLDEpO1xuICAgICAgICBsZXQgc2hvcnRlclBlcm1zID0gcGVybXMobmV3QXJyLmpvaW4oXCJcIikpO1xuXG4gICAgICAgIGxldCBpTGV0dGVyQXJyID0gd29yZC5zcGxpdChcIlwiKS5zbGljZShpLGkrMSk7XG4gXG4gICAgICAgIGxldCBpUGVybXMgPSBzaG9ydGVyUGVybXMubWFwKHBlcm0gPT4gKGlMZXR0ZXJBcnIuY29uY2F0KHBlcm0uc3BsaXQoXCJcIikpKS5qb2luKFwiXCIpKTtcbiAgICAgICAgcGVybXNBcnIgPSBwZXJtc0Fyci5jb25jYXQoaVBlcm1zKTtcbiAgICB9XG4gICAgcmV0dXJuIHBlcm1zQXJyO1xufVxuXG5mdW5jdGlvbiBpc0FuYWdyYW0od29yZDEsd29yZDIpIHtcbiAgICBpZiAod29yZDEubGVuZ3RoICE9IHdvcmQyLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgIGNvbnN0IG9iaiA9IHt9O1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgd29yZDEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbGV0IGxldHRlciA9IHdvcmQxLnNsaWNlKGksaSsxKTtcbiAgICAgICAgaWYgKG9ialtsZXR0ZXJdICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgb2JqW2xldHRlcl0gKz0gMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9ialtsZXR0ZXJdID0gMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHdvcmQyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBsZXR0ZXIgPSB3b3JkMi5zbGljZShpLGkrMSk7XG4gICAgICAgIGlmIChvYmpbbGV0dGVyXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBicmVha1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgb2JqW2xldHRlcl0gLT0gMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhvYmopLmV2ZXJ5KGVsID0+IGVsID09PSAwKTtcbn0iXSwibmFtZXMiOlsiQUxQSEEiLCJzcGxpdCIsIldvcmROb2RlIiwiY29uc3RydWN0b3IiLCJ3b3JkIiwicGFyZW50IiwiZGljdGlvbmFyeSIsImNoaWxkcmVuIiwibmV4dFJ1bmdXb3JkcyIsImJpbmQiLCJhbmFncmFtcyIsImFkZENoaWxkIiwibmV3V29yZCIsImNoaWxkIiwicHVzaCIsInJlbW92ZUNoaWxkIiwiY2hpbGRJZHgiLCJpbmRleE9mIiwibGVuZ3RoIiwic3BsaWNlIiwiaSIsImJlZm9yZVN0ciIsInNsaWNlIiwiYWZ0ZXJTdHIiLCJqIiwibmV3U3RyIiwiY29uY2F0Iiwiam9pbiIsImhhcyIsImFkZFJ1bmdDaGlsZHJlbiIsInJ1bmdDaGlsZHJlbiIsImFkZEFuYWdyYW1DaGlsZHJlbiIsImZvckVhY2giLCJhbmFncmFtIiwiYWRkTGV0dGVyV29yZHMiLCJyZW1vdmVMZXR0ZXJXb3JkcyIsImFkZEFkZFJlbW92ZUNoaWxkcmVuIiwiYWRkV29yZCIsInJlbW92ZVdvcmQiLCJjb25zb2xlIiwibG9nIiwid29yZDIiLCJpc0FuYWdyYW0iLCJwZXJtcyIsInBlcm1zQXJyIiwibmV3QXJyIiwic2hvcnRlclBlcm1zIiwiaUxldHRlckFyciIsImlQZXJtcyIsIm1hcCIsInBlcm0iLCJ3b3JkMSIsIm9iaiIsImxldHRlciIsInVuZGVmaW5lZCIsIk9iamVjdCIsInZhbHVlcyIsImV2ZXJ5IiwiZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/word_node.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;